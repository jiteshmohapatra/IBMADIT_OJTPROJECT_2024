package ibm_internship;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Properties;
import jakarta.mail.*;
import jakarta.mail.internet.*;
import java.io.File;

public class ReportServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Get form data
        String fullName = request.getParameter("fullName");
        String email = request.getParameter("email");
        String incidentType = request.getParameter("incidentType");
        String species = request.getParameter("species");
        String location = request.getParameter("location");
        String dateTime = request.getParameter("dateTime");
        String description = request.getParameter("description");

        // Compose email content (HTML format)
        String emailContent = "<h1>Wildlife Report Details</h1>" +
                "<p><strong>Reporter Name:</strong> " + fullName + "</p>" +
                "<p><strong>Email:</strong> " + email + "</p>" +
                "<p><strong>Incident Type:</strong> " + incidentType + "</p>" +
                "<p><strong>Species:</strong> " + species + "</p>" +
                "<p><strong>Location:</strong> " + location + "</p>" +
                "<p><strong>Date and Time:</strong> " + dateTime + "</p>" +
                "<p><strong>Description:</strong> " + description + "</p>";

        // Status flag
        String status;

        try {
            // Call sendEmail method to send email with optional PDF attachment
            sendEmail(email, "Wildlife Incident Report", emailContent, "/path/to/your/file.pdf");
            status = "success";
        } catch (Exception e) {
            status = "error";
            e.printStackTrace();
        }

        // Redirect back to the report page with status
        response.sendRedirect("report.jsp?status=" + status);
    }

    private void sendEmail(String toEmail, String subject, String emailContent, String attachmentPath) throws MessagingException, IOException {
        // SMTP server configuration
        String host = "smtp.gmail.com";
        final String fromEmail = "team.wildhaven@gmail.com"; // Replace with your email
        final String emailPassword = "spvl dynb jlxm bmgn";  // Replace with your app password

        // SMTP properties
        Properties props = new Properties();
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");

        // Create session with authentication
        Session session = Session.getInstance(props, new jakarta.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(fromEmail, emailPassword);
            }
        });

        // Create a new email message
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(fromEmail));
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
        message.setSubject(subject);

        // Create multipart message for body and attachment
        Multipart multipart = new MimeMultipart();

        // Body part (email content in HTML)
        MimeBodyPart bodyPart = new MimeBodyPart();
        bodyPart.setContent(emailContent, "text/html");
        multipart.addBodyPart(bodyPart);

        // Add the attachment if it exists
        if (attachmentPath != null && !attachmentPath.isEmpty()) {
            File file = new File(attachmentPath);
            if (file.exists()) {
                MimeBodyPart attachmentPart = new MimeBodyPart();
                attachmentPart.attachFile(file);
                multipart.addBodyPart(attachmentPart);
            }
        }

        // Set the multipart content to the message
        message.setContent(multipart);

        // Send the email
        Transport.send(message);
        System.out.println("Email sent successfully to: " + toEmail);
    }
}
