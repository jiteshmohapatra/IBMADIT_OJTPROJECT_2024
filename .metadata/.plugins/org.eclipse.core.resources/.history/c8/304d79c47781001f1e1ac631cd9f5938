package ibm_internship;

import java.io.IOException;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.util.Properties;
import jakarta.mail.*;
import jakarta.mail.internet.*;

@WebServlet("/ReportServlet")
public class ReportServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Fetch form data
        String fullName = request.getParameter("fullName");
        String email = request.getParameter("email");
        String contactNumber = request.getParameter("contactNumber");
        String incidentType = request.getParameter("incidentType");
        String species = request.getParameter("species");
        String location = request.getParameter("location");
        String dateTime = request.getParameter("dateTime");
        String description = request.getParameter("description");
        String severity = request.getParameter("severity");
        String witnesses = request.getParameter("witnesses");
        String witnessContact = request.getParameter("witnessContact");
        String actionRequired = request.getParameter("actionRequired");
        String additionalNotes = request.getParameter("additionalNotes");

        // Prepare the message
        String messageContent = "Wildlife Incident Report:\n\n"
            + "Reporter Information:\n"
            + "Full Name: " + fullName + "\n"
            + "Email: " + email + "\n"
            + "Contact Number: " + contactNumber + "\n\n"
            + "Incident Details:\n"
            + "Incident Type: " + incidentType + "\n"
            + "Species Identified: " + species + "\n"
            + "Location: " + location + "\n"
            + "Date and Time: " + dateTime + "\n"
            + "Description: " + description + "\n"
            + "Severity Level: " + severity + "\n\n"
            + "Witnesses:\n"
            + "Witnesses: " + witnesses + "\n"
            + "Witness Contact: " + witnessContact + "\n\n"
            + "Action Required: " + actionRequired + "\n"
            + "Additional Notes: " + additionalNotes;

        // Send email
        String toEmail = "recipient@example.com"; // Change to the recipient's email
        String fromEmail = "your-email@gmail.com"; // Change to your email
        String fromPassword = "your-email-password"; // Change to your email password

        sendEmail(toEmail, fromEmail, fromPassword, "Wildlife Incident Report", messageContent);

        // Redirect or show success message
        response.sendRedirect("thankyou.jsp");
    }

    private void sendEmail(String to, String from, String password, String subject, String body) {
        // Setup mail server
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");

        // Get session
        Session session = Session.getInstance(props, new jakarta.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        });

        try {
            // Create a default MimeMessage object
            Message message = new MimeMessage(session);
            // Set From: header field of the header
            message.setFrom(new InternetAddress(from));
            // Set To: header field of the header
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            // Set Subject: header field
            message.setSubject(subject);
            // Now set the actual message
            message.setText(body);

            // Send message
            Transport.send(message);
            System.out.println("Sent message successfully....");

        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }
}
